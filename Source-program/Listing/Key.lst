C51 COMPILER V9.02   KEY                                                                   03/23/2018 21:00:22 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\Output\Key.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Code\DeveloperCode\Key.C BROWSE INCDIR(..\Code\DeveloperCode\inc;..\Code
                    -\DirverCode\inc;..\Code\Public\inc) DEBUG OBJECTEXTEND PRINT(..\Listing\Key.lst) OBJECT(..\Output\Key.obj)

line level    source

   1          
   2          #include "Key.H"
   3          
   4          bit sS1 = 0, sS2 = 0;   //按键是否有过按下动作；
   5          enum {
   6              noKey,              //无按键事件；
   7              combS1,             //以S1主按键的按键组合事件；（主按键即保持按下的按键）
   8              combS2,             //以S2主按键的按键组合事件；
   9              disCombS1,          //非组合S1按下事件；
  10              disCombS2,          //非组合S2按下事件；
  11          } combHappened = noKey; //按键组合事件发生处理后置noKey；
  12          
  13          enum {
  14              autoControl,        //自动模式；
  15              manualControl,      //手动模式；
  16          }WorkMode = autoControl;//工作模式默认为自动；
  17          
  18          extern void checkPressKey();   //按键按下检测;
  19          extern void checkCombKey();    //按键组合检测，在checkPressKey()后调用；
  20          extern void checkOrdinaryKey();//普通按键检测，在checkCombKey()后调用；
  21          extern void keyCheckOver();    //按键检测完毕响应，在checkOrdinaryKey()后调用；
  22          
  23          /* *******************************************************************************************
  24          // 按键响应
  25          /* ******************************************************************************************* */
  26          void KeyResponse()
  27          {
  28   1          checkPressKey();    //按键按下检测;
  29   1          checkCombKey();     //按键组合检测，在checkPressKey()后调用；
  30   1          checkOrdinaryKey(); //普通按键检测，在checkCombKey()后调用；
  31   1          keyCheckOver();     //按键检测完毕响应，在checkOrdinaryKey()后调用；
  32   1      }
  33          
  34          /* *******************************************************************************************
  35          // 按键检测完毕响应，在checkOrdinaryKey()后调用；
  36          /* ******************************************************************************************* */
  37          static void keyCheckOver()
  38          {
  39   1          switch (combHappened)
  40   1          {
  41   2              case noKey:         //无处理；
  42   2                  break;
  43   2              case combS1:
  44   2                  break;
  45   2              case combS2:
  46   2                  break;
  47   2              case disCombS1:
  48   2                  break;
  49   2              case disCombS2:
  50   2                  break;
  51   2              default:
  52   2                  break;
  53   2          }
  54   1      }
C51 COMPILER V9.02   KEY                                                                   03/23/2018 21:00:22 PAGE 2   

  55          
  56          /* *******************************************************************************************
  57          // 按键按下检测
  58          /* ******************************************************************************************* */
  59          static void checkPressKey()
  60          {
  61   1          if (!PIN_S1 && !sS1)    //按键S1不是持续按下（按键按下的一瞬间执行，持续按下不会再执行消抖）；
  62   1          {
  63   2              DelayMS(20);
  64   2              if (!PIN_S1)
  65   2              {
  66   3                  sS1 = 1;        //确认按键按下；  
  67   3              }
  68   2          }
  69   1          if (!PIN_S2 && !sS2)
  70   1          {
  71   2              DelayMS(20);
  72   2              if (!PIN_S2)
  73   2              {
  74   3                  sS2 = 1;        //确认按键按下；  
  75   3              }
  76   2          }
  77   1      }
  78          /* *******************************************************************************************
  79          // 按键组合检测，在checkPressKey()后调用；
  80          /* ******************************************************************************************* */
  81          /* ******************************************************************************************* 
  82          /* 按键状态穷举：
  83          /*  一、基础：
  84                  1. S1按下后抬起，S2无动作；
  85                  2. S2按下后抬起，S1无动作；
  86              二、组合：
  87                  1. S1按下保持，S2反复按下；
  88                  2. S2按下保持，S1反复按下；
  89          上方四种是我们需要的，识别后调用功能函数
  90          下方四种(很多种)不需要，识别后滤去；
  91                  3. S1按下，S2按下，S1抬起，S2抬起；
  92                  4. S2按下，S1按下，S2抬起，S1抬起；
  93                  5. S1按下，S2按下保持，S1反复抬起按下；
  94                  6. S2按下，S1按下保持，S2反复抬起按下；
  95          /* ******************************************************************************************* */
  96          static void checkCombKey()
  97          {
  98   1          if (!PIN_S1)            //即目前S1处于按下状态；
  99   1          {
 100   2              if (sS2 && PIN_S2)  //S2按下过，并且目前处于抬起状态；
 101   2              {
 102   3                  sS2 = 0;
 103   3                  combHappened = combS1;
 104   3              }
 105   2          }
 106   1          if (!PIN_S2)            //即目前S2处于按下状态；
 107   1          {
 108   2              if (sS1 && PIN_S1)  //S1按下过，并且目前处于抬起状态；
 109   2              {
 110   3                  sS1 = 0;
 111   3                  combHappened = combS2;
 112   3              }
 113   2          }
 114   1      // 下方函数不能与上方函数位置对调；
 115   1          if (PIN_S1 && combHappened == combS1 && sS1)    //S1抬起，有过以S1为主键的组合键操作，sS1未被复位；
 116   1          {
C51 COMPILER V9.02   KEY                                                                   03/23/2018 21:00:22 PAGE 3   

 117   2              combHappened = noKey;                       //仅复位，无其他操作；
 118   2              sS1 = 0;     
 119   2          }
 120   1          else if (PIN_S2 && combHappened == combS2 && sS2)//S2抬起，有过以S2为主键的组合键操作，sS2未被复位；
 121   1          {
 122   2              combHappened = noKey;                       //仅复位，无其他操作；
 123   2              sS2 = 0;     
 124   2          }
 125   1      }
 126          
 127          /* *******************************************************************************************
 128          // 普通按键检测，在checkCombKey()后调用；
 129          /* ******************************************************************************************* */
 130          static void checkOrdinaryKey()
 131          {
 132   1          if (combHappened == 0)      //前提：在之前未检测到组合按键；
 133   1          {
 134   2              if (sS1 && PIN_S1)      //按键S1已经抬起并有按下记录；
 135   2              {
 136   3                  sS1 = 0;
 137   3                  combHappened = disCombS1;      
 138   3              }
 139   2              else if (sS2 && PIN_S2) //按键S2已经抬起并有按下记录；
 140   2              {
 141   3                  sS2 = 0;
 142   3                  combHappened = disCombS2;    
 143   3              }
 144   2          }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
